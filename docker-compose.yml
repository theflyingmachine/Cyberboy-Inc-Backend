version: '3.8'

services:

  db:
    image: postgres:14
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - .:/application
    ports:
      - "5001:5432"

  redis:
    image: "redis:alpine"
    ports:
      - "6001:6379"
    volumes:
      - redis-data:/data

  app:
    build: .
    working_dir: /application/server
    env_file:
      - .env
    command: "tail -f /dev/null"
#    command: ["python", "manage.py", "runserver", "0:9001"]
#    command: >
#      sh -c "python manage.py migrate && python manage.py runserver 0:9001"

    volumes:
      - .:/application
      - app-python-site-packages:/usr/local/lib/python3.8/site-packages
      - app-usr-local-bin:/usr/local/bin
    ports:
      - "9001:9001"
    depends_on:
      - db
      - redis

  email-engine:
    build:
      context: ./email_engine
      dockerfile: Dockerfile  # This path is relative to the `context` directory
    working_dir: /application/email_engine
    env_file:
      - .env
    command: "tail -f /dev/null"
    #    command: ["python", "manage.py", "runserver", "0:9001"]
    #    command: >
    #      sh -c "python manage.py migrate && python manage.py runserver 0:9001"

    volumes:
      - .:/application
      - app-python-site-packages:/usr/local/lib/python3.8/site-packages
      - app-usr-local-bin:/usr/local/bin
    ports:
      - "9002:9001"
    depends_on:
      - db
      - redis

#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 22181:2181
#
#  kafka:
#    image: confluentinc/cp-kafka:5.3.1
#    depends_on:
#      - zookeeper
#    ports:
#      - 29092:29092
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


volumes:
  app-python-site-packages:
    driver: local
  postgres-data:
    driver: local
  app-usr-local-bin:
    driver: local
  redis-data:
    driver: local


